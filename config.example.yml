# Timezone. Used when displaying dates (like in silences and alerts).
# Defaults to "Etc/GMT" (so GMT+0)
timezone: "Europe/Moscow"
# So, Telegram has its own limitations - every button has a "data" field, which we use
# to pass some data to next callbacks, and it's limited to 64 bytes
# (see https://core.telegram.org/bots/api#inlinekeyboardbutton). We use cache on our side
# to be able to fit into these limits. This cache may work as in-memory only cache,
# or be persistent to file. This param specifies the path to this cache file; if it's not present,
# the cache will be not persistent if the app is restarted, so you might face issues
# if you start an app, do some queries, restart the app then try to press the buttons
# that were generated before restarting the app.
cache-path: "cache.json"
# Logging configuration.
log:
  # Log level. Defaults to "info"
  level: info
 # Output logs as JSON. Useful if you are using logging aggregation solutions such as ELK. Defaults to false.
  json: false
# Telegram bot token, you can create a Telegram bot with @BotFather bot on Telegram
telegram:
  token: xxx:yyy
  # List of Telegram user IDs who can interact with the bot.
  # You can get your id with @getmyid_bot on Telegram.
  # If not provided, anyone can access this bot, so it's not recommended skipping it.
  admins: [1, 2]
grafana:
  # Whether to use Grafana as an alert source (see firing alerts, etc.).
  # If you use Prometheus as an alert source and are not using Grafana alerts, you might set it to false.
  # Defaults to true.
  alerts: true
  # Whether to use Grafana as a silence manager (see, create and manage silences).
  # If you're using external Alertmanager as a silence manager, you might set it to false.
  # Defaults to true.
  silences: true
  # URL of the remote Grafana to do queries against.
  url: http://localhost:3000
   # Grafana credentials. You can authorize either with login/password, as below...
  user: admin
  password: admin
  # ... or with bearer token.
  token: xxxxx
  # Default render options. If you want to avoid specifying render params each time,
  # you can specify it here, and it'll apply to all render requests, then all params you've specified
  # in your render request would be added above these.
  # Defaults to "orgId: 1, from: now, to: now-30m"
  # All params are expected to be strings, even if they are number, so put them in quotes.
  # Here's an example of how you can customize it:
  render_options:
    # Customize your time interval for rendering
    from: "now"
    to: "now-6h"
    # Customize your timezone
    timezone: "Europe/Moscow"
    # Customize your plot width/height
    width: "1000"
    height: "500"
  # A set of mutes duration used when launching a /firing command and creating
  # a new silence via inline keyboard from the result of this command.
  # Used for silencing Grafana alerts only.
  # Defaults to: 1h, 8h, 48h, 168h, 99999h
  mutes_durations:
    - 1h
    - 8h
    - 24h
    - 168h
    - 99999h
# Optional Prometheus config, if you're using Prometheus alerts.
prometheus:
  # URL of the remote Prometheus
  url: http://localhost:9090
  # Prometheus credentials
  user: admin
  password: admin
# Optional config if you use external Alertmanager, used for getting silences list and creating new ones.
alertmanager:
  # URL of the remote Alertmanager to do queries against. Defaults to http://localhost:9093
  url: http://localhost:9093
  # Alertmanager credentials
  user: admin
  password: admin
  # Same as grafana.mutes_duration, but for Prometheus alerts. Defaults are the same.
  mutes_durations:
    - 1h
    - 8h
    - 24h
    - 168h
    - 99999h
